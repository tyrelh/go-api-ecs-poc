Description: Go POC VPC

Parameters:
  AwsAccount:
    Description: "Environment Type"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "production"
  # AwsRegion:
  #   Description: "AWS Region"
  #   Type: String
  #   Default: "ca-central-1"
  VpcCIDR:
    Description: VPC IP range (CIDR notation)
    Type: String
    Default: 10.16.0.0/16
  PublicSubnet1CIDR:
    Description: IP range for the Public Subnet in AZ1
    Type: String
    Default: 10.16.13.0/24
  PublicSubnet2CIDR:
    Description: IP range for the Public Subnet in AZ1
    Type: String
    Default: 10.16.14.0/24
  PublicSubnet3CIDR:
    Description: IP range for the Public Subnet in AZ1
    Type: String
    Default: 10.16.15.0/24
  PrivateSubnet1CIDR:
    Description: IP range for the Private Subnet in AZ1
    Type: String
    Default: 10.16.10.0/24
  PrivateSubnet2CIDR:
    Description: IP range for the Private Subnet in AZ2
    Type: String
    Default: 10.16.11.0/24
  PrivateSubnet3CIDR:
    Description: IP range for the Private Subnet in AZ3
    Type: String
    Default: 10.16.12.0/24
  ProjectTag:
    Description: Project tag
    Type: String
    Default: go-api-poc

Conditions:
  IsProduction: !Equals
    - !Ref AwsAccount
    - production

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
        - Key: Project
          Value: !Ref ProjectTag
  VPCFlowLogs:
    Type: AWS::EC2::FlowLog
    Condition: IsProduction
    Properties:
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Sub "/vpc/flow-logs/${AwsAccount}"
      DeliverLogsPermissionArn: !Sub arn:aws:iam::${AWS::AccountId}:role/VPC_CloudWatch_FlowLogs
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
        - Key: Project
          Value: !Ref ProjectTag
  NatGatewayPublicIp:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "${ProjectTag}NatGatewayPublicIp"
        - Key: "Project"
          Value: !Ref ProjectTag

  # GATEWAYS
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
        - Key: Project
          Value: !Ref ProjectTag
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayPublicIp.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} NAT Gateway (AZ1)
        - Key: Project
          Value: !Ref ProjectTag

  # SUBNETS
  # Public
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Subnet (AZ1)
        - Key: Project
          Value: !Ref ProjectTag
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Subnet (AZ2)
        - Key: Project
          Value: !Ref ProjectTag
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Subnet (AZ3)
        - Key: Project
          Value: !Ref ProjectTag
  # Private
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Private Subnet (AZ1)
        - Key: Project
          Value: !Ref ProjectTag
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Private Subnet (AZ2)
        - Key: Project
          Value: !Ref ProjectTag
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Private Subnet (AZ3)
        - Key: Project
          Value: !Ref ProjectTag
  
  # ROUTES
  # Public
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Routes
        - Key: Project
          Value: !Ref ProjectTag
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3
  # Private
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Private Routes
        - Key: Project
          Value: !Ref ProjectTag
  RouteToNatGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2
  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3


Outputs:
  VPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPCID
  VPCFlowLogsID:
    Description: Flow log ID for this VPC
    Condition: IsProduction
    Value: !Ref VPCFlowLogs
  VPCCidrBlock:
    Description: The VPCCidrBlock of the VPC
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub ${AWS::StackName}-VPCCidrBlock

  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet1
  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet2
  PublicSubnet3:
    Description: Public Subnet 3
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet3
  PrivateSubnet1:
    Description: Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1
  PrivateSubnet2:
    Description: Private Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet2
  PrivateSubnet3:
    Description: Private Subnet 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet3

  PublicRouteTable:
    Description: Public Route Table
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-PublicRouteTable
  PrivateRouteTable:
    Description: Private Route Table
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-PrivateRouteTable